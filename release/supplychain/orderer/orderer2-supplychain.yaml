apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: supplychain-orderer2
  namespace: supplychain-net
  annotations:
    flux.weave.works/automated: "false"
spec:
  releaseName: supplychain-orderer2
  chart:
    git: git@github.com:Henni/blockchain-automation-framework.git
    ref: release
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:2.0.0
        alpineutils: registry.hub.docker.com/leppelsack/alpine-utils:1.0

    orderer:
      name: orderer2
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://10.0.2.2:8200
      role: vault-role
      authpath: supplychain-net-auth
      secretprefix: secret/crypto/ordererOrganizations/supplychain-net/orderers/orderer2.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth
    kafka:
      readinesscheckinterval: 10
      readinessthreshold: 10
      brokers:
      - kafka-0.broker.supplychain-net.svc.cluster.local:9092
      - kafka-1.broker.supplychain-net.svc.cluster.local:9092
      - kafka-2.broker.supplychain-net.svc.cluster.local:9092
      - kafka-3.broker.supplychain-net.svc.cluster.local:9092

    proxy:
      provider: haproxy
      external_url_suffix: supplychain-net

    genesis: |-
      
